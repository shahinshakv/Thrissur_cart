/* eslint-disable lines-between-class-members */
/* eslint-disable no-console */
// const debug = require('debug')('netsuite-sales-discount');

/**
 * NetSuiteSalesDiscount class
 */
class NetSuiteSalesDiscount {
  /**
   * @private  This constructor is for internal use only
   */
  constructor({ internalId, name, description, amount, grossAmount, taxDetailsReference }) {
    this.internalId = internalId;
    this.name = name;
    this.description = description;
    this.amount = amount;
    this.grossAmount = grossAmount;
    this.taxDetailsReference = taxDetailsReference;
  }

  /**
   * @private  This method is for internal use only
   */
  equals(netsuiteSalesDiscount) {
    if (
      this.internalId === netsuiteSalesDiscount.internalId &&
      this.name === netsuiteSalesDiscount.name &&
      this.description === netsuiteSalesDiscount.description &&
      this.amount === netsuiteSalesDiscount.amount &&
      this.grossAmount === netsuiteSalesDiscount.grossAmount &&
      this.taxDetailsReference === netsuiteSalesDiscount.taxDetailsReference
    ) {
      return true;
    }
    return false;
  }

  /**
   * @private  This method is for internal use only
   */
  dump() {
    console.log('  ***************************');
    console.log('  ** Discount Details...');
    console.log('  ***************************');
    console.log(`    internalId: ${this.internalId}`);
    console.log(`    name: ${this.name}`);
    console.log(`    description: ${this.description}`);
    console.log(`    amount: ${this.amount}`);
    console.log(`    grossAmount: ${this.grossAmount}`);
    console.log(`    taxDetailsReference: ${this.taxDetailsReference}`);
  }
}

module.exports = NetSuiteSalesDiscount;
