/* eslint-disable lines-between-class-members */
/* eslint-disable no-console */
// const debug = require('debug')('netsuite-purchas-order-shipping');
const NetSuiteAddress = require('./netsuite-address');

/**
 * NetSuitePurchaseOrderShipping class
 */
class NetSuitePurchaseOrderShipping {
  /**
   * Create an instance of the NetSuitePurchaseOrderShipping class
   * @param  {object} props
   * @param  {object} props.address         Address json object
   * @param  {string} props.date            Date
   * @param  {string} props.method          Method
   * @param  {string} props.trackingNumber  Tracking number
   */
  constructor({ address, date, method, trackingNumber }) {
    this.address = new NetSuiteAddress(address);
    this.date = new Date(date);
    this.method = method;
    this.trackingNumber = trackingNumber !== undefined ? trackingNumber : 'not available';
  }

  /**
   * Compare against another NetSuitePurchaseOrderShipping object to see if they're equal
   * @param {NetSuitePurchaseOrderShipping} netsuitePurchaseOrderShipping  The object to compare against
   * @return {boolean} true if they're equal, else returns false
   */
  // Note: not using Date and TrackingNumber values when comparing objects as they may change for each transaction
  equals(netsuitePurchaseOrderShipping) {
    if (
      this.address.equals(netsuitePurchaseOrderShipping.address) &&
      this.method === netsuitePurchaseOrderShipping.method
    ) {
      return true;
    }
    return false;
  }

  /**
   * Output the properties to the console
   */
  dump() {
    console.log('  ***************************');
    console.log('  ** Shipping Details...');
    console.log('  ***************************');
    this.address.dump();
    console.log(`    date: ${this.date}`);
    console.log(`    method: ${this.method}`);
    console.log(`    trackingNumber: ${this.trackingNumber}`);
  }
}

module.exports = NetSuitePurchaseOrderShipping;
