/* eslint-disable lines-between-class-members */
/* eslint-disable no-console */
// const debug = require('debug')('netsuite-cash-sale-shipping');
const NetSuiteSalesShipping = require('./netsuite-sales-shipping');

/**
 * NetSuiteCashSaleShipping class
 * @extends NetSuiteSalesShipping
 */
class NetSuiteCashSaleShipping extends NetSuiteSalesShipping {
  // Private fields

  /**
   * Create an instance of the NetSuiteCashSaleShipping class
   * @param  {object} props
   * @param  {object} props.address              Address json object
   * @param  {number} props.quantity             Quantity
   * @param  {number} props.amount               Amount
   * @param  {number} props.grossAmount          Gross amount
   * @param  {number} props.taxAmount            Tax amount
   * @param  {string} props.costEstimateType     Cost estimate type
   * @param  {number} props.costEstimate         Cost estimate
   * @param  {string} props.taxDetailsReference  Tax details reference
   */
  constructor({
    address,
    quantity,
    amount,
    grossAmount,
    taxAmount,
    costEstimateType,
    costEstimate,
    taxDetailsReference,
  }) {
    super({
      address,
      quantity,
      amount,
      grossAmount,
      taxAmount,
      costEstimateType,
      costEstimate,
      taxDetailsReference,
    });
  }

  /**
   * Compare against another NetSuiteCashSaleShipping object to see if they're equal
   * @param {NetSuiteCashSaleShipping} netsuiteCashSaleShipping  The object to compare against
   * @return {boolean} true if they're equal, else returns false
   */
  equals(netsuiteCashSaleShipping) {
    if (super.equals(netsuiteCashSaleShipping)) {
      return true;
    }
    return false;
  }

  /**
   * Output the properties to the console
   */
  dump() {
    super.dump();
  }
}

module.exports = NetSuiteCashSaleShipping;
