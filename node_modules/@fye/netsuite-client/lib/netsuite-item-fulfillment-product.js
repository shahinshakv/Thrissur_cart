/* eslint-disable lines-between-class-members */
/* eslint-disable no-console */
// const debug = require('debug')('netsuite-item-fulfillment-product');
const NetSuiteProduct = require('./netsuite-product');

/**
 * NetSuiteItemFulfillmentProduct class
 * @extends NetSuiteProduct
 */
class NetSuiteItemFulfillmentProduct extends NetSuiteProduct {
  /**
   * Create an instance of the NetSuitePurchaseOrderProduct class
   * @param  {object} props
   * @param  {string} props.internalId                  Internal Id
   * @param  {string} props.name                        Name
   * @param  {string} props.description                 Description
   * @param  {number} props.quantity                    Quantity
   * @param  {number} props.onHand                      On hand
   * @param  {string} props.purchaseOrderTransactionId  PurchaseOrder transaction Id
   * @param  {string} props.vendorName                  Vendor name
   */
  constructor({ internalId, name, description, quantity, onHand, purchaseOrderTransactionId, vendorName }) {
    super({
      internalId,
      name,
      description,
      quantity,
    });
    this.onHand = onHand;
    this.purchaseOrderTransactionId = purchaseOrderTransactionId;
    this.vendorName = vendorName;
  }

  /**
   * Compare against another NetSuiteItemFulfillmentProduct object to see if they're equal
   * @param {NetSuiteItemFulfillmentProduct} netsuiteItemFulfillmentProduct  The object to compare against
   * @return {boolean} true if they're equal, else returns false
   */
  // Note: not using onHand and ID values when comparing objects as they may change for each transaction
  equals(netsuiteItemFulfillmentProduct) {
    if (super.equals(netsuiteItemFulfillmentProduct) && this.vendorName === netsuiteItemFulfillmentProduct.vendorName) {
      return true;
    }
    return false;
  }

  /**
   * Output the properties to the console
   */
  dump() {
    super.dump();
    console.log(`    onHand: ${this.onHand}`);
    console.log(`    purchaseOrderTransactionId: ${this.purchaseOrderTransactionId}`);
    console.log(`    vendorName: ${this.vendorName}`);
  }
}

module.exports = NetSuiteItemFulfillmentProduct;
