/* eslint-disable no-console */
// const debug = require('debug')('netsuite-address');

/**
 * NetSuiteAddress class
 */
class NetSuiteAddress {
  /**
   * Create an instance of the NetSuiteAddress class
   * @param {object} netsuiteInternalAddressRecord  Address json object returned from the NetSuite web service
   */
  constructor(netsuiteInternalAddressRecord) {
    this.netsuiteInternalAddressRecord = netsuiteInternalAddressRecord;
  }

  /**
   * Get the person's name
   * @return {string} The person's name
   */
  get addressee() {
    return this.netsuiteInternalAddressRecord.addressee !== undefined
      ? this.netsuiteInternalAddressRecord.addressee
      : '';
  }

  /**
   * Get the phone number
   * @return {number} The phone number
   */
  get phoneNumber() {
    return this.netsuiteInternalAddressRecord.addrPhone !== undefined
      ? this.netsuiteInternalAddressRecord.addrPhone
      : '';
  }

  /**
   * Get the address1 value
   * @return {string} The address1 value
   */
  get address1() {
    return this.netsuiteInternalAddressRecord.addr1 !== undefined ? this.netsuiteInternalAddressRecord.addr1 : '';
  }

  /**
   * Get the address2 value
   * @return {string} The address2 value
   */
  get address2() {
    return this.netsuiteInternalAddressRecord.addr2 !== undefined ? this.netsuiteInternalAddressRecord.addr2 : '';
  }

  /**
   * Get the address3 value
   * @return {string} The address3 value
   */
  get address3() {
    return this.netsuiteInternalAddressRecord.addr3 !== undefined ? this.netsuiteInternalAddressRecord.addr3 : '';
  }

  /**
   * Get the city
   * @return {string} The city
   */
  get city() {
    return this.netsuiteInternalAddressRecord.city !== undefined ? this.netsuiteInternalAddressRecord.city : '';
  }

  /**
   * Get the state
   * @return {string} The state
   */
  get state() {
    return this.netsuiteInternalAddressRecord.state !== undefined ? this.netsuiteInternalAddressRecord.state : '';
  }

  /**
   * Get the zipcode
   * @return {string} The zipcode
   */
  get zip() {
    return this.netsuiteInternalAddressRecord.zip !== undefined ? this.netsuiteInternalAddressRecord.zip : '';
  }

  /**
   * Get the country
   * @return {string} The country
   */
  get country() {
    return this.netsuiteInternalAddressRecord.country !== undefined ? this.netsuiteInternalAddressRecord.country : '';
  }

  /**
   * Compare against another NetSuiteAddress object to see if they're equal
   * @param {NetSuiteAddress} netsuiteAddress  The object to compare against
   * @return {boolean} true if they're equal, else returns false
   */
  equals(netsuiteAddress) {
    if (
      this.addressee === netsuiteAddress.addressee &&
      this.phoneNumber === netsuiteAddress.phoneNumber &&
      this.address1 === netsuiteAddress.address1 &&
      this.address2 === netsuiteAddress.address2 &&
      this.address3 === netsuiteAddress.address3 &&
      this.city === netsuiteAddress.city &&
      this.state === netsuiteAddress.state &&
      this.zip === netsuiteAddress.zip &&
      this.country === netsuiteAddress.country
    ) {
      return true;
    }
    return false;
  }

  /**
   * Output the properties to the console
   */
  dump() {
    console.log(`    addressee: ${this.addressee}`);
    console.log(`    phoneNumber: ${this.phoneNumber}`);
    console.log(`    address1: ${this.address1}`);
    console.log(`    address2: ${this.address2}`);
    console.log(`    address3: ${this.address3}`);
    console.log(`    city: ${this.city}`);
    console.log(`    state: ${this.state}`);
    console.log(`    zip: ${this.zip}`);
    console.log(`    country: ${this.country}`);
  }
}

module.exports = NetSuiteAddress;
