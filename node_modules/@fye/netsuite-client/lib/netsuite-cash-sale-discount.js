/* eslint-disable lines-between-class-members */
/* eslint-disable no-console */
// const debug = require('debug')('netsuite-cash-sale-discount');
const NetSuiteSalesDiscount = require('./netsuite-sales-discount');

/**
 * NetSuiteCashSaleDiscount class
 * @extends NetSuiteSalesDiscount
 */
class NetSuiteCashSaleDiscount extends NetSuiteSalesDiscount {
  /**
   * Create an instance of the NetSuiteCashSaleDiscount class
   * @param  {object} props
   * @param  {string} props.internalId           Internal Id
   * @param  {string} props.name                 Name
   * @param  {string} props.description          Description
   * @param  {number} props.amount               Amount
   * @param  {number} props.grossAmount          Gross amount
   * @param  {string} props.taxDetailsReference  Tax details reference
   * @param  {number} props.rate                 Rate
   */
  constructor({ internalId, name, description, amount, grossAmount, taxDetailsReference, rate }) {
    super({
      internalId,
      name,
      description,
      amount,
      grossAmount,
      taxDetailsReference,
    });
    this.rate = rate;
  }

  /**
   * Compare against another NetSuiteCashSaleDiscount object to see if they're equal
   * @param {NetSuiteCashSaleDiscount} netsuiteCashSaleDiscount  The object to compare against
   * @return {boolean} true if they're equal, else returns false
   */
  equals(netsuiteCashSaleDiscount) {
    if (super.equals(netsuiteCashSaleDiscount) && this.rate === netsuiteCashSaleDiscount.rate) {
      return true;
    }
    return false;
  }

  /**
   * Output the properties to the console
   */
  dump() {
    super.dump();
    console.log(`    rate: ${this.rate}`);
  }
}

module.exports = NetSuiteCashSaleDiscount;
